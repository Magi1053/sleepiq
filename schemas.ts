const Calibrate = {"metadata":{"allOf":[{"type":"object","properties":{"sleeperId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the sleeper"}},"required":["sleeperId"]}]}} as const
;
const CheckOutlet = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]},{"type":"object","properties":{"outletId":{"type":"integer","enum":[1,2,3,4],"description":"Outlet identifier: 1=Right Night Stand, 2=Left Night Stand, 3=Right Night Light, 4=Left Night Light","$schema":"https://json-schema.org/draft/2020-12/schema#"}},"required":["outletId"]}]}} as const
;
const ExecuteBam = {"body":{"type":"object","required":["args","key","sourceApplication"],"properties":{"args":{"type":"string","description":"Space-separated arguments for the command"},"key":{"type":"string","description":"BAM key identifier for the command to execute"},"sourceApplication":{"type":"string","description":"Name of the application making the request"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"accountId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the account"},"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["accountId","bedId"]}]},"response":{"200":{"type":"object","properties":{"cdcResponse":{"type":"string","description":"Response from the command execution"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetAccount = {"response":{"200":{"type":"object","properties":{"accountId":{"type":"string","description":"Unique identifier for the account"},"beds":{"type":"array","items":{"type":"object","properties":{"bedId":{"type":"string","description":"Unique identifier for the bed"},"name":{"type":"string","description":"Name of the bed"},"macAddress":{"type":"string","format":"mac","description":"MAC address of the bed"},"model":{"type":"string","description":"Model of the bed"},"components":{"type":"array","items":{"type":"object","properties":{"base":{"type":"string","description":"Base component identifier"},"model":{"type":"string","description":"Model of the component"}}}},"sleeperLeftId":{"type":"string","description":"ID of the left sleeper"},"sleeperRightId":{"type":"string","description":"ID of the right sleeper"}}},"description":"List of beds associated with the account"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetBed = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]},"response":{"200":{"type":"object","properties":{"bedId":{"type":"string","description":"Unique identifier for the bed"},"name":{"type":"string","description":"Name of the bed"},"macAddress":{"type":"string","format":"mac","description":"MAC address of the bed"},"model":{"type":"string","description":"Model of the bed"},"components":{"type":"array","items":{"type":"object","properties":{"base":{"type":"string","description":"Base component identifier"},"model":{"type":"string","description":"Model of the component"}}}},"sleeperLeftId":{"type":"string","description":"ID of the left sleeper"},"sleeperRightId":{"type":"string","description":"ID of the right sleeper"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetFavorite = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]},"response":{"200":{"type":"object","properties":{"sleepNumberFavoriteLeft":{"type":"integer","description":"Favorite sleep number for left side"},"sleepNumberFavoriteRight":{"type":"integer","description":"Favorite sleep number for right side"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetFootWarming = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]},"response":{"200":{"type":"object","properties":{"footWarmingLeft":{"type":"integer","description":"Foot warming setting for left side (0=Off, 31=Low, 57=Medium, 72=High)"},"footWarmingRight":{"type":"integer","description":"Foot warming setting for right side (0=Off, 31=Low, 57=Medium, 72=High)"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetFoundation = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]},"response":{"200":{"type":"object","properties":{"fsCurrentPositionPresetRight":{"type":"integer","description":"Current preset position for right side"},"fsCurrentPositionPresetLeft":{"type":"integer","description":"Current preset position for left side"},"fsTargetPositionPresetRight":{"type":"integer","description":"Target preset position for right side"},"fsTargetPositionPresetLeft":{"type":"integer","description":"Target preset position for left side"},"fsLeftSidePosition":{"type":"integer","description":"Current left side position"},"fsRightSidePosition":{"type":"integer","description":"Current right side position"},"fsLeftSideTargetPosition":{"type":"integer","description":"Target left side position"},"fsRightSideTargetPosition":{"type":"integer","description":"Target right side position"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const GetPauseMode = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]},"response":{"200":{"type":"object","properties":{"pauseMode":{"type":"string","enum":["on","off"],"description":"Current pause mode status\n\n`on` `off`"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const Login = {"body":{"type":"object","required":["login","password"],"properties":{"login":{"type":"string","format":"email","description":"User's email address"},"password":{"type":"string","description":"User's password"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"response":{"200":{"type":"object","properties":{"key":{"type":"string","description":"API key for subsequent requests"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"201":{"type":"object","properties":{"key":{"type":"string","description":"API key for subsequent requests"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"}}} as const
;
const SetFavorite = {"body":{"type":"object","required":["side","sleepNumberFavorite"],"properties":{"side":{"type":"string","enum":["L","R"],"description":"Side of the bed (L=Left, R=Right)"},"sleepNumberFavorite":{"type":"integer","minimum":0,"maximum":100,"description":"Favorite sleep number value (0-100, multiples of 5)"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]}} as const
;
const SetPauseMode = {"formData":{"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["on","off"],"description":"Pause mode to set"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]}} as const
;
const SetSleepNumber = {"body":{"type":"object","required":["sleepNumber","side"],"properties":{"sleepNumber":{"type":"integer","minimum":0,"maximum":100,"description":"Sleep number value (0-100, multiples of 5)"},"side":{"type":"string","enum":["L","R"],"description":"Side of the bed (L=Left, R=Right)"}},"$schema":"https://json-schema.org/draft/2020-12/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]}} as const
;
const StopPump = {"metadata":{"allOf":[{"type":"object","properties":{"bedId":{"type":"string","$schema":"https://json-schema.org/draft/2020-12/schema#","description":"Unique identifier for the bed"}},"required":["bedId"]}]}} as const
;
export { Calibrate, CheckOutlet, ExecuteBam, GetAccount, GetBed, GetFavorite, GetFootWarming, GetFoundation, GetPauseMode, Login, SetFavorite, SetPauseMode, SetSleepNumber, StopPump }
